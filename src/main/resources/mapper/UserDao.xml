<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asuis.j2ee.dao.UserDao">
    <resultMap id="baseResultMap" type="com.asuis.j2ee.domain.User">
        <id column="user_id" jdbcType="INTEGER" javaType="Long" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
    </resultMap>
    <resultMap id="baseUser" type="com.asuis.j2ee.model.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="age" jdbcType="TINYINT" property="age" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="is_account_non_expired" jdbcType="CHAR" property="isAccountNonExpired" />
        <result column="is_enabled" jdbcType="CHAR" property="isEnabled" />
        <result column="birth_day" jdbcType="DATE" property="birthDay" />
    </resultMap>
    <resultMap id="depUser" type="com.asuis.j2ee.domain.DepUser">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="roleName" jdbcType="VARCHAR" property="role"/>
        <result column="department.name" property="dep" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
    </resultMap>
    <resultMap id="roleUser" type="com.asuis.j2ee.vo.RoleUser">
        <id property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="phoneNumber" column="phone" jdbcType="VARCHAR"/>
        <result jdbcType="VARCHAR" column="name" property="depName"/>
        <result property="registerTime" column="create_date" jdbcType="VARCHAR"/>
        <collection property="roleName" column="user_id" jdbcType="VARCHAR" select="getRolesByUser" ofType="string">
            <result column="role_name" jdbcType="VARCHAR" property="value"/>
        </collection>
    </resultMap>
    <resultMap id="role" type="com.asuis.j2ee.vo.Role">
        <id property="roleId" column="id" jdbcType="INTEGER"/>
        <result property="roleName" column="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        user_id, username, age, phone, email, create_date, is_account_non_expired, is_enabled,
        birth_day,avatar
    </sql>
    <select id="getUserByUsernameAndPassword" resultMap="baseResultMap">
        SELECT
            user.user_id,user.avatar,user.username
        FROM user,users_auth
        WHERE username = #{username,jdbcType=VARCHAR} AND
        indentity = 'LOGIN' AND credential = #{password,jdbcType=VARCHAR} AND `user`.user_id = users_auth.user_id LIMIT 1
    </select>
    <select id="getUserByUsername" resultType="com.asuis.j2ee.model.User">
        SELECT
            <include refid="Base_Column_List"/>
        FROM user
        WHERE username = #{username,jdbcType=VARCHAR}
    </select>
    <select id="getUserInfoByUsername" resultType="com.asuis.j2ee.domain.User">
        SELECT
            user_id,username,age,create_date,birth_day
        FROM user
        WHERE username = #{username,jdbcType=VARCHAR}
    </select>
    <select id="getUserListByKey" parameterType="list" resultMap="roleUser">
        SELECT
            user.avatar,user.user_id,user.username,user.phone,department.name,user.create_date
        FROM user,user_dep,department
        WHERE user.user_id = user_dep.user_id AND
            department.id = user_dep.dep_id
        <if test="keys.size()!=0">
            AND
        </if>
        <foreach collection="keys" close=" " index="index" item="key" open=" " separator="OR">
            concat(user.user_id,username,user.phone,department.name) LIKE concat('%',#{key},'%')
        </foreach>
    </select>
    <select id="getRolesByUser" parameterType="Integer" resultType="string">
        SELECT
            role.remark
        FROM role ,user_role,user
        WHERE user.user_id = user_role.user_id AND
              role.id = user_role.role_id AND
              user.user_id = #{userId,jdbcType=INTEGER}
    </select>

</mapper>