<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asuis.j2ee.dao.DepartmentDao">
    <resultMap id="baseUser" type="com.asuis.j2ee.model.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="age" jdbcType="TINYINT" property="age" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="is_account_non_expired" jdbcType="CHAR" property="isAccountNonExpired" />
        <result column="is_enabled" jdbcType="CHAR" property="isEnabled" />
        <result column="birth_day" jdbcType="DATE" property="birthDay" />
    </resultMap>
    <resultMap id="BaseResultMap" type="com.asuis.j2ee.model.Department">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="parent_id" jdbcType="INTEGER" property="parentId" />
        <result column="structure" jdbcType="VARCHAR" property="structure" />
        <result column="sort_no" jdbcType="INTEGER" property="sortNo" />
        <result column="create_persion" jdbcType="VARCHAR" property="createPersion" />
        <result column="create_date" jdbcType="DATE" property="createDate" />
        <result column="update_date" jdbcType="DATE" property="updateDate" />
    </resultMap>
    <sql id="baseDepartment">
        id, name, remark, parent_id, structure, sort_no, create_persion, create_date, update_date
    </sql>
    <select id="getUsersByDepartment" resultMap="baseUser">
        SELECT
          user.user_id,username,age,phone,email,department.name
        FROM user,department,user_dep
        WHERE user.user_id = user_dep.user_id AND department.id = user_dep.dep_id
        AND department.name = #{departName,jdbcType=VARCHAR}
    </select>
    <select id="getDepartmentDetailByName" resultType="department">
        SELECT
          <include refid="baseDepartment"/>
        FROM department
        WHERE name = #{departName,jdbcType=VARCHAR}
    </select>
    <select id="getDepartmentByPid" resultType="department">
        SELECT
            <include refid="baseDepartment"/>
        FROM department
        WHERE department.parent_id = #{pid,jdbcType=INTEGER}
    </select>
    <select id="getDepartmentByName" resultType="department">
        SELECT
        <include refid="baseDepartment"/>
        FROM department
    </select>
    <select id="getDepartmentByUserId" resultType="department">
      SELECT
          department.name
        FROM department,user_dep
        WHERE department.id = user_dep.dep_id
        AND user_dep.user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="getDepartments" resultType="department">
        SELECT
            department.id,department.name
        FROM department
    </select>
    <select id="getDepartDetails" parameterType="Integer" resultType="department">
        SELECT
            department.id,department.name,create_date,department.remark
        FROM department
        WHERE parent_id = #{pid,jdbcType=INTEGER}
    </select>
    <select id="countByPid" resultType="int">
        SELECT
            count(1)
        FROM department
        WHERE department.parent_id = #{pid,jdbcType=INTEGER}
    </select>
    <delete id="deleteAllDepByUserId">
        DELETE
        FROM user_dep
        WHERE user_id = #{userId,jdbcType=INTEGER}
    </delete>
</mapper>